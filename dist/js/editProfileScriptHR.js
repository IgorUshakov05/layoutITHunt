let address = document.getElementById("address");
const CityGet = document.getElementById("CityGet");
let timerId;
let cityOfServer = [];
const formData = new FormData();

address.addEventListener("input", function (e) {
  let value = e.target.value.trim(); // Убираем пробелы в начале и конце строки
  if (value.length === 0) {
    cityOfServer = []; // Очищаем массив при пустом значении
    displayCities([]); // Отображаем пустой список
    return;
  }
  if (value.length >= 3) {
    const searchTerm = value.toLowerCase();
    const filteredCities = cityOfServer.filter((city) =>
      city.toLowerCase().includes(searchTerm)
    );
    displayCities(filteredCities);
    return;
  }

  // Если запущен таймер, очищаем его
  if (timerId) {
    clearTimeout(timerId);
  }

  // Запускаем таймер для задержки запроса
  timerId = setTimeout(() => {
    const ul = document.getElementById("listCity");
    // Очищаем предыдущие элементы списка
    ul.innerHTMl = "";
    CityGet.style.display = "none";
    fetch("/api/areas", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: "augwod89h1h9awdh9py0y82hjd",
      },
      body: JSON.stringify({ city: value }),
    })
      .then((response) => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
      })
      .then((data) => {
        CityGet.style.display = "block";
        const ul = document.getElementById("listCity");
        // Очищаем предыдущие элементы списка
        while (ul.firstChild) {
          ul.removeChild(ul.firstChild);
        }
        // Обновляем массив cityOfServer с новыми данными
        cityOfServer = data.path;

        // Отображаем полученные города
        displayCities(cityOfServer);
      })
      .catch((error) => {
        CityGet.style.display = "none";
        console.error("Fetch error:", error);
      });
  }, 500);
});

// Функция для отображения городов из массива cityOfServer
function displayCities(cities) {
  const ul = document.getElementById("listCity");
  // Очищаем предыдущие элементы списка
  while (ul.firstChild) {
    ul.removeChild(ul.firstChild);
  }
  // Создаем элементы li для каждого города в массиве
  cities.forEach((city) => {
    const li = document.createElement("li");
    const label = document.createElement("label");
    label.textContent = city; // Устанавливаем текст метки из массива
    li.appendChild(label); // Добавляем метку в элемент li
    ul.appendChild(li); // Добавляем элемент li в список ul
  });
  let lisity = document.getElementById("listCity").childNodes;

  for (let i = 0; i < lisity.length; i++) {
    lisity[i].addEventListener("click", function () {
      console.log(this.textContent); // Выводим текст элемента списка при клике
      address.value = this.textContent;
      data.city = this.textContent;
      CityGet.style.display = "none";
    });
  }

  // Показываем элементы
  ul.style.display = "block";
}





let data = {
  avatar: "",
  name: undefined,
  surname: undefined,
  birthDay: undefined,
  status: "",
  job: "",
  description: "",
  city: "",
  contacts: [],
};
let Username = document.getElementById("name");
Username.addEventListener("input", function (e) {
  let value = this.value;
  console.log(value);
  if (value.split(" ").length > 0) {
    this.value = value.split(" ")[0];
  }
  this.value =
    this.value.slice(0, 1).toUpperCase() +
    this.value.slice(1, this.value.length).toLocaleLowerCase();
  data.name = this.value;
});
let dateInput = document.getElementById("birthDay");
dateInput.addEventListener("input", function (e) {
  let value = e.target.value.trim();
  if (!value) {
    data.birthDay = "";
    return;
  }
  data.birthDay = value.split("-").reverse().join("-");
});

let Surname = document.getElementById("surname");
Surname.addEventListener("input", function (e) {
  let value = this.value;
  console.log(value);
  if (value.split(" ").length > 0) {
    this.value = value.split(" ")[0];
  }
  this.value =
    this.value.slice(0, 1).toUpperCase() +
    this.value.slice(1, this.value.length).toLocaleLowerCase();
  data.surname = this.value;
});

let Status = document.getElementById("status");
Status.addEventListener("change", function (e) {
  let value = this.value;
  if (value === "1") return data.status = "Ищу специалиста";
  if (value === "2") return data.status = "Открыт к предложениям";
  else data.status = "Не ищу специалиста";
});

let myContacts = [];
document.querySelectorAll(".itemContact").forEach((elem) => {
  myContacts.push({
    type: elem.classList[1],
    url: elem.querySelector("a").textContent.trim(),
  });
  data.contacts.push({
    type: elem.classList[1],
    url: elem.querySelector("a").textContent.trim(),
  });
});

let myPort = [];


$("#contactsContainer").delegate(".removeLink", "click", function () {
  let contactUrl = $(this).closest("li").find(".group a").text().trim();
  myContacts = myContacts.filter((elem) => elem.url !== contactUrl);
  data.contacts = data.contacts.filter((elem) => elem.url !== contactUrl);
  $(this).closest("li").remove();
});

$("#portContainer").delegate(".removeLink", "click", function () {
  let contactUrl = $(this).closest("li").find(".group a").text().trim();
  myPort = myPort.filter((elem) => elem.url !== contactUrl);
  data.portfolio = data.portfolio.filter((elem) => elem.url !== contactUrl);
  $(this).closest("li").remove();
});

$("#description").on("input", () => {
  $(".scoreSymbol").text(`${description.value.length}/1000`);

  if (description.value.length >= 1000) {
    description.value = description.value.slice(0, 1000);
    return false;
  } else {
    data.description = description.value;
    return true;
  }
});
let contantsPic = {
  vk: '<svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_1330_2403)"><path d="M0 9.12C0 4.82078 0 2.67119 1.33559 1.33559C2.67119 0 4.82078 0 9.12 0H9.88C14.1792 0 16.3288 0 17.6644 1.33559C19 2.67119 19 4.82078 19 9.12V9.88C19 14.1792 19 16.3288 17.6644 17.6644C16.3288 19 14.1792 19 9.88 19H9.12C4.82078 19 2.67119 19 1.33559 17.6644C0 16.3288 0 14.1792 0 9.88V9.12Z" fill="#0077FF"/><path d="M10.1093 13.688C5.77893 13.688 3.30897 10.7192 3.20605 5.77924H5.37522C5.44647 9.40507 7.0456 10.9409 8.31227 11.2576V5.77924H10.3548V8.90632C11.6057 8.77174 12.9197 7.34674 13.363 5.77924H15.4056C15.0651 7.7109 13.6401 9.1359 12.6268 9.72174C13.6401 10.1967 15.2631 11.4397 15.8806 13.688H13.6322C13.1493 12.1838 11.9461 11.0201 10.3548 10.8617V13.688H10.1093Z" fill="white"/></g><defs><clipPath id="clip0_1330_2403"><rect width="19" height="19" rx="2" fill="white"/></clipPath></defs></svg>',
  teleg:
    '<svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M9.5 19C14.7467 19 19 14.7467 19 9.5C19 4.25329 14.7467 0 9.5 0C4.25329 0 0 4.25329 0 9.5C0 14.7467 4.25329 19 9.5 19Z" fill="url(#paint0_linear_1330_2392)"/><path fill-rule="evenodd" clip-rule="evenodd" d="M4.30006 9.39971C7.0695 8.19311 8.91623 7.39764 9.84025 7.01331C12.4785 5.91597 13.0267 5.72536 13.384 5.71906C13.4626 5.71768 13.6383 5.73715 13.7521 5.82951C13.8483 5.9075 13.8747 6.01284 13.8874 6.08678C13.9 6.16072 13.9158 6.32916 13.9032 6.46077C13.7603 7.96294 13.1416 11.6083 12.8269 13.2908C12.6938 14.0027 12.4315 14.2414 12.1777 14.2647C11.626 14.3155 11.2071 13.9002 10.6728 13.5499C9.83663 13.0018 9.36428 12.6606 8.55267 12.1258C7.61473 11.5077 8.22276 11.168 8.75729 10.6128C8.89718 10.4675 11.3279 8.25656 11.375 8.056C11.3808 8.03091 11.3863 7.93741 11.3308 7.88804C11.2752 7.83867 11.1932 7.85555 11.1341 7.86898C11.0502 7.88801 9.71448 8.77087 7.1269 10.5176C6.74776 10.7779 6.40435 10.9047 6.09666 10.8981C5.75747 10.8908 5.10498 10.7063 4.61993 10.5486C4.02499 10.3553 3.55215 10.253 3.59332 9.92457C3.61477 9.7535 3.85035 9.57854 4.30006 9.39971Z" fill="white"/><defs><linearGradient id="paint0_linear_1330_2392" x1="9.5" y1="0" x2="9.5" y2="18.8591" gradientUnits="userSpaceOnUse"><stop stop-color="#2AABEE"/><stop offset="1" stop-color="#229ED9"/></linearGradient></defs></svg>',
  tel: '<svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M2.61806 5.62972C3.65806 7.67361 5.33 9.34555 7.3775 10.3856L8.96639 8.79306C9.165 8.59444 9.45028 8.53667 9.69944 8.61611C10.5083 8.88333 11.3786 9.02778 12.2778 9.02778C12.6786 9.02778 13 9.34917 13 9.75V12.2778C13 12.6786 12.6786 13 12.2778 13C5.49611 13 0 7.50389 0 0.722222C0 0.321389 0.325 0 0.722222 0H3.25C3.65083 0 3.97222 0.321389 3.97222 0.722222C3.97222 1.62139 4.11667 2.49167 4.38389 3.30056C4.46333 3.54972 4.40556 3.835 4.20694 4.03361L2.61806 5.62972Z" fill="#5412E0"/></svg>',
  other:
    '<svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M9.50008 0.581787C9.4957 0.581787 9.4957 0.581787 9.49131 0.581787C9.49131 0.581787 9.49131 0.581787 9.48693 0.581787C9.48254 0.581787 9.47816 0.581787 9.47816 0.581787C4.44863 0.594942 0.379395 4.67294 0.379395 9.70248C0.379395 14.732 4.44863 18.81 9.47816 18.8232C9.48254 18.8232 9.48693 18.8232 9.48693 18.8232H9.49131C9.4957 18.8232 9.4957 18.8232 9.50008 18.8232C14.5384 18.8232 18.6208 14.7408 18.6208 9.70248C18.6208 4.66417 14.5384 0.581787 9.50008 0.581787ZM9.86403 6.04105C10.8331 6.01474 11.7715 5.88757 12.6792 5.66833C12.951 6.74264 13.1221 7.98358 13.1484 9.34291H9.86403V6.04105ZM9.86403 5.30876V1.37108C10.8463 1.64294 11.846 2.95404 12.4775 4.96673C11.6356 5.16844 10.7629 5.28245 9.86403 5.30876ZM9.13613 1.36231V5.31314C8.22845 5.28683 7.34708 5.16844 6.50078 4.96235C7.14098 2.9365 8.14514 1.61663 9.13613 1.36231ZM9.13613 6.04105V9.33853H5.82988C5.85619 7.97919 6.02721 6.73825 6.29907 5.66394C7.21114 5.88319 8.16267 6.01474 9.13613 6.04105ZM5.09321 9.33853H1.12045C1.19938 7.46177 1.90097 5.74287 3.01913 4.38354C3.83035 4.8308 4.69418 5.19914 5.59748 5.471C5.2993 6.63301 5.12391 7.94411 5.09321 9.33853ZM5.09321 10.0664C5.11952 11.4565 5.29492 12.7719 5.5931 13.934C4.6898 14.2102 3.83035 14.5742 3.01475 15.0214C1.89659 13.6621 1.19938 11.9432 1.11607 10.0664H5.09321ZM5.82988 10.0664H9.13613V13.3595C8.16267 13.3858 7.21114 13.5174 6.29907 13.741C6.02721 12.6667 5.85619 11.4258 5.82988 10.0664ZM9.13613 14.0918V18.047C8.14514 17.7883 7.14098 16.4728 6.50078 14.447C7.34708 14.2365 8.22845 14.1181 9.13613 14.0918ZM9.86403 18.0339V14.0874C10.7629 14.1137 11.6356 14.2321 12.4818 14.4338C11.846 16.4509 10.8506 17.762 9.86403 18.0339ZM9.86403 13.3595V10.0664H13.1484C13.1221 11.4214 12.951 12.6623 12.6792 13.7366C11.7715 13.5174 10.8331 13.3858 9.86403 13.3595ZM13.8806 10.0664H17.8797C17.8008 11.9432 17.0992 13.6577 15.981 15.0214C15.161 14.5698 14.2928 14.2014 13.3808 13.9252C13.6789 12.7632 13.8543 11.4565 13.8806 10.0664ZM13.8806 9.33853C13.8543 7.9485 13.6789 6.6374 13.3851 5.47539C14.2972 5.19914 15.1654 4.8308 15.981 4.38354C17.0992 5.74287 17.8008 7.46177 17.8797 9.34291H13.8806V9.33853ZM15.4812 3.82226C14.7533 4.20814 13.9903 4.52824 13.1878 4.76941C12.7625 3.39692 12.1617 2.27876 11.4558 1.54209C13.008 1.91481 14.3937 2.72164 15.4812 3.82226ZM7.51809 1.55086C6.81211 2.28315 6.21576 3.40131 5.7948 4.76503C5.00113 4.52385 4.24253 4.20814 3.5234 3.82226C4.59771 2.72603 5.97459 1.92358 7.51809 1.55086ZM3.51902 15.5783C4.23815 15.1924 5.00113 14.8767 5.79042 14.6355C6.21576 16.0036 6.81211 17.1174 7.51809 17.8541C5.97459 17.4814 4.59771 16.6789 3.51902 15.5783ZM11.4558 17.8629C12.1661 17.1262 12.7625 16.008 13.1922 14.6312C13.9947 14.8723 14.7576 15.1924 15.4855 15.5783C14.3981 16.6833 13.008 17.4901 11.4558 17.8629Z" fill="black"/></svg>',
  gm: '<svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M17 6.58325L13.4209 9.25134V15.0756H15.9263C16.512 15.0756 17 14.6038 17 14.0018V6.58325Z" fill="#4CAF50"/><path d="M2 6.58325L5.56287 9.26761V15.0918H3.07374C2.48806 15.0918 2 14.62 2 14.0181V6.58325Z" fill="#1E88E5"/><path d="M13.4207 4.7937L9.49989 7.73836L5.5791 4.7937V9.25136L9.49989 12.196L13.4207 9.25136V4.7937Z" fill="#E53935"/><path d="M2 5.18405V6.58317L5.56287 9.26753V4.7936L4.45659 3.96389C4.19629 3.76867 3.87091 3.65479 3.52927 3.65479C2.68329 3.65479 2 4.33808 2 5.18405Z" fill="#C62828"/><path d="M17 5.18405V6.58317L13.4209 9.25126V4.7936L14.5434 3.96389C14.8037 3.76867 15.1291 3.65479 15.4708 3.65479C16.3167 3.65479 17 4.33808 17 5.18405Z" fill="#FBC02D"/></svg>',
};

let portfolioPic = {
  be: '<svg width="19" height="19" viewBox="0 0 23 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M11.5 23.5098C17.8513 23.5098 23 18.361 23 12.0098C23 5.65849 17.8513 0.509766 11.5 0.509766C5.14873 0.509766 0 5.65849 0 12.0098C0 18.361 5.14873 23.5098 11.5 23.5098Z" fill="#4900E3"/><g clip-path="url(#clip0_3054_3601)"><path d="M10.7038 11.5613C10.7038 11.5613 12.0785 11.4673 12.0785 9.98249C12.0785 8.4976 10.9538 7.77295 9.52921 7.77295H4.84131V16.0707H9.52921C9.52921 16.0707 12.391 16.154 12.391 13.6216C12.391 13.6216 12.5158 11.5613 10.7038 11.5613ZM9.19178 9.24778H9.52921C9.52921 9.24778 10.1664 9.24778 10.1664 10.1111C10.1664 10.9744 9.79168 11.0995 9.36661 11.0995H6.90686V9.24778H9.19178ZM9.39674 14.5959H6.90686V12.3785H9.52921C9.52921 12.3785 10.479 12.367 10.479 13.518C10.479 14.4886 9.76959 14.5886 9.39674 14.5959ZM16.2077 9.88414C12.7432 9.88414 12.7463 13.0724 12.7463 13.0724C12.7463 13.0724 12.5086 16.2443 16.2077 16.2443C16.2077 16.2443 19.2903 16.4065 19.2903 14.0378H17.705C17.705 14.0378 17.7578 14.9298 16.2606 14.9298C16.2606 14.9298 14.675 15.0277 14.675 13.4862H19.3432C19.3432 13.4861 19.8539 9.88414 16.2077 9.88414ZM14.6576 12.3785C14.6576 12.3785 14.8512 11.0995 16.2429 11.0995C17.6344 11.0995 17.617 12.3785 17.617 12.3785H14.6576ZM17.9863 9.2836H14.2694V8.26179H17.9863V9.2836Z" fill="white"/></g><defs><clipPath id="clip0_3054_3601"><rect width="14.5263" height="8.47369" fill="white" transform="translate(4.8418 7.77295)"/></clipPath></defs></svg>',
  git: '<svg width="19" height="19" viewBox="0 0 23 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.4962 0.509766C8.76606 0.511226 6.12544 1.50829 4.04652 3.32267C1.96759 5.13705 0.585926 7.65043 0.148572 10.4134C-0.288782 13.1764 0.246691 16.0087 1.65925 18.4041C3.07182 20.7994 5.26935 22.6015 7.85891 23.4881C8.43021 23.5974 8.6454 23.2323 8.6454 22.9219C8.6454 22.6115 8.63398 21.7114 8.63017 20.7274C5.43089 21.44 4.75485 19.3353 4.75485 19.3353C4.23307 17.9685 3.47895 17.6093 3.47895 17.6093C2.43537 16.8791 3.55703 16.8927 3.55703 16.8927C4.71296 16.9767 5.32045 18.1091 5.32045 18.1091C6.34498 19.9112 8.01126 19.3899 8.66635 19.0853C8.76918 18.3219 9.06817 17.8026 9.39762 17.5078C6.842 17.211 4.15689 16.1996 4.15689 11.6817C4.14105 10.51 4.56513 9.37684 5.34139 8.51675C5.22332 8.21998 4.82912 7.02118 5.45374 5.39284C5.45374 5.39284 6.41925 5.07654 8.61685 6.6014C10.5018 6.0729 12.4906 6.0729 14.3755 6.6014C16.5712 5.07654 17.5348 5.39284 17.5348 5.39284C18.1614 7.01727 17.7672 8.21608 17.6491 8.51675C18.4278 9.37698 18.8528 10.5121 18.8355 11.6856C18.8355 16.2133 16.1447 17.211 13.5852 17.5019C13.9966 17.869 14.3641 18.5855 14.3641 19.6867C14.3641 21.2643 14.3508 22.5334 14.3508 22.9219C14.3508 23.2362 14.5584 23.6033 15.1411 23.4881C17.731 22.6014 19.9287 20.799 21.3412 18.4032C22.7538 16.0075 23.289 13.1747 22.8511 10.4115C22.4133 7.64825 21.0309 5.13484 18.9513 3.32078C16.8717 1.50671 14.2305 0.5103 11.5 0.509766H11.4962Z" fill="#191717"/></svg>',
  dri: '<svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M2.61806 5.62972C3.65806 7.67361 5.33 9.34555 7.3775 10.3856L8.96639 8.79306C9.165 8.59444 9.45028 8.53667 9.69944 8.61611C10.5083 8.88333 11.3786 9.02778 12.2778 9.02778C12.6786 9.02778 13 9.34917 13 9.75V12.2778C13 12.6786 12.6786 13 12.2778 13C5.49611 13 0 7.50389 0 0.722222C0 0.321389 0.325 0 0.722222 0H3.25C3.65083 0 3.97222 0.321389 3.97222 0.722222C3.97222 1.62139 4.11667 2.49167 4.38389 3.30056C4.46333 3.54972 4.40556 3.835 4.20694 4.03361L2.61806 5.62972Z" fill="#5412E0"/></svg>',
  other:
    '<svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M9.50008 0.581787C9.4957 0.581787 9.4957 0.581787 9.49131 0.581787C9.49131 0.581787 9.49131 0.581787 9.48693 0.581787C9.48254 0.581787 9.47816 0.581787 9.47816 0.581787C4.44863 0.594942 0.379395 4.67294 0.379395 9.70248C0.379395 14.732 4.44863 18.81 9.47816 18.8232C9.48254 18.8232 9.48693 18.8232 9.48693 18.8232H9.49131C9.4957 18.8232 9.4957 18.8232 9.50008 18.8232C14.5384 18.8232 18.6208 14.7408 18.6208 9.70248C18.6208 4.66417 14.5384 0.581787 9.50008 0.581787ZM9.86403 6.04105C10.8331 6.01474 11.7715 5.88757 12.6792 5.66833C12.951 6.74264 13.1221 7.98358 13.1484 9.34291H9.86403V6.04105ZM9.86403 5.30876V1.37108C10.8463 1.64294 11.846 2.95404 12.4775 4.96673C11.6356 5.16844 10.7629 5.28245 9.86403 5.30876ZM9.13613 1.36231V5.31314C8.22845 5.28683 7.34708 5.16844 6.50078 4.96235C7.14098 2.9365 8.14514 1.61663 9.13613 1.36231ZM9.13613 6.04105V9.33853H5.82988C5.85619 7.97919 6.02721 6.73825 6.29907 5.66394C7.21114 5.88319 8.16267 6.01474 9.13613 6.04105ZM5.09321 9.33853H1.12045C1.19938 7.46177 1.90097 5.74287 3.01913 4.38354C3.83035 4.8308 4.69418 5.19914 5.59748 5.471C5.2993 6.63301 5.12391 7.94411 5.09321 9.33853ZM5.09321 10.0664C5.11952 11.4565 5.29492 12.7719 5.5931 13.934C4.6898 14.2102 3.83035 14.5742 3.01475 15.0214C1.89659 13.6621 1.19938 11.9432 1.11607 10.0664H5.09321ZM5.82988 10.0664H9.13613V13.3595C8.16267 13.3858 7.21114 13.5174 6.29907 13.741C6.02721 12.6667 5.85619 11.4258 5.82988 10.0664ZM9.13613 14.0918V18.047C8.14514 17.7883 7.14098 16.4728 6.50078 14.447C7.34708 14.2365 8.22845 14.1181 9.13613 14.0918ZM9.86403 18.0339V14.0874C10.7629 14.1137 11.6356 14.2321 12.4818 14.4338C11.846 16.4509 10.8506 17.762 9.86403 18.0339ZM9.86403 13.3595V10.0664H13.1484C13.1221 11.4214 12.951 12.6623 12.6792 13.7366C11.7715 13.5174 10.8331 13.3858 9.86403 13.3595ZM13.8806 10.0664H17.8797C17.8008 11.9432 17.0992 13.6577 15.981 15.0214C15.161 14.5698 14.2928 14.2014 13.3808 13.9252C13.6789 12.7632 13.8543 11.4565 13.8806 10.0664ZM13.8806 9.33853C13.8543 7.9485 13.6789 6.6374 13.3851 5.47539C14.2972 5.19914 15.1654 4.8308 15.981 4.38354C17.0992 5.74287 17.8008 7.46177 17.8797 9.34291H13.8806V9.33853ZM15.4812 3.82226C14.7533 4.20814 13.9903 4.52824 13.1878 4.76941C12.7625 3.39692 12.1617 2.27876 11.4558 1.54209C13.008 1.91481 14.3937 2.72164 15.4812 3.82226ZM7.51809 1.55086C6.81211 2.28315 6.21576 3.40131 5.7948 4.76503C5.00113 4.52385 4.24253 4.20814 3.5234 3.82226C4.59771 2.72603 5.97459 1.92358 7.51809 1.55086ZM3.51902 15.5783C4.23815 15.1924 5.00113 14.8767 5.79042 14.6355C6.21576 16.0036 6.81211 17.1174 7.51809 17.8541C5.97459 17.4814 4.59771 16.6789 3.51902 15.5783ZM11.4558 17.8629C12.1661 17.1262 12.7625 16.008 13.1922 14.6312C13.9947 14.8723 14.7576 15.1924 15.4855 15.5783C14.3981 16.6833 13.008 17.4901 11.4558 17.8629Z" fill="black"/></svg>',
  gd: ' <svg width="19" height="19" viewBox="0 0 23 20" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_3057_3624)"><path d="M3.8335 19.9977L7.66654 13.3325H22.9999L19.1665 19.9977H3.8335Z" fill="#2684FC"/><path d="M15.3335 13.3326H22.9999L15.3335 0.00219727H7.6665L15.3335 13.3326Z" fill="#FFBA00"/><path d="M0 13.3328L3.83357 19.998L11.5 6.66765L7.66661 0.00244141L0 13.3328Z" fill="#00AC47"/><path d="M11.5 6.59995L15.3335 0.00219727H7.6665L11.5 6.59995Z" fill="#00832D"/><path d="M15.3997 13.3487L19.1475 19.9963L22.981 13.2988L15.3997 13.3487Z" fill="#EA4335"/><path d="M7.58133 13.3487L2.32608e-05 13.2988L3.8335 19.9963L7.58133 13.3487Z" fill="#0066DA"/></g><defs><clipPath id="clip0_3057_3624"><rect width="23" height="20" fill="white"/></clipPath></defs></svg>',
  dri: '<svg width="19" height="19" viewBox="0 0 25 25" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="12.5" cy="12.5" r="11.5" fill="#EF568F" stroke="#E82B6D" stroke-width="2"/><path d="M8.5 2C11.5 6 14.5 10.5 17.5 22" stroke="#E82B6D" stroke-width="2"/><path d="M1 11C9 12 16.9 9.4 20.5 5" stroke="#E82B6D" stroke-width="2"/><path d="M23.5 13.2134C15.5 11.5 8.5 14.5 5 20.5" stroke="#E82B6D" stroke-width="2"/></svg>',
};

//Контакты
function selectPortfolio(media = "teleg") {
  let { svg, domain, type } = getMediaIcon(media);
  $("#addContact").attr("disabled", true);
  $("#linkuser").attr("type", type);
  $("#linkuser").val("");
  mediaGlobal = media;
  $("#selected").html(svg);
  $(".inputContact").attr("placeholder", domain);
  $(".myOption").toggle();
}

$("#specialist").on("keydown", function (e) {
  if (e.which === 9) {
    // Check for Tab key
    e.preventDefault();
    $(".CitisGet li:visible:first label").click();
  }
});

var mediaGlobal = "teleg";
//Контакты
function selectMedia(media = "teleg") {
  let { svg, domain, type } = getMediaIcon(media);
  $("#addContact").attr("disabled", true);
  $("#linkuser").attr("type", type);
  $("#linkuser").val("");
  mediaGlobal = media;
  $("#selected").html(svg);
  $(".inputContact").attr("placeholder", domain);
  $(".myOption").toggle();
}

var globalPort = "be";
//Портфолио
function selectPortfolio(port = "be") {
  let { svg, domain, type } = getPortfolio(port);
  $("#addPort").attr("disabled", true);
  $("#linkuserPort").attr("type", type);
  $("#linkuserPort").val("");
  globalPort = port;
  $("#selectedPort").html(svg);
  $(".inputPortfolio").attr("placeholder", domain);
  $(".myOptionPort").toggle();
}
//Контакты
$(".inputContact").on("input", () => {
  if ($(".inputContact").val().trim() !== "") {
    $("#addContact").removeAttr("disabled");
  } else {
    $("#addContact").attr("disabled", true);
  }
});
//Портфолио
$(".inputPortfolio").on("input", () => {
  if ($(".inputPortfolio").val().trim() !== "") {
    $("#addPort").removeAttr("disabled");
  } else {
    $("#addPort").attr("disabled", true);
  }
});
//Контакты
$(".openMySelected").on("click", () => {
  $(".myOption").toggle();
  $(".openMySelected").find("svg").toggleClass("rotate");
});
//Портфолио
$(".openMySelectedPortfolio").on("click", () => {
  $(".myOptionPort").toggle();
  $(".openMySelectedPortfolio").find("svg").toggleClass("rotate");
});

//Контакты
function getMediaIcon(media) {
  switch (media) {
    case "teleg":
      return {
        svg: `<svg width="24" height="24" viewBox="0 0 29 29" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M14.5 29C22.5081 29 29 22.5081 29 14.5C29 6.49187 22.5081 0 14.5 0C6.49187 0 0 6.49187 0 14.5C0 22.5081 6.49187 29 14.5 29Z" fill="url(#paint0_linear_1756_1563)"/>
            <path fill-rule="evenodd" clip-rule="evenodd" d="M6.56397 14.3469C10.791 12.5053 13.6097 11.2912 15.02 10.7045C19.0469 9.02966 19.8836 8.73871 20.429 8.72911C20.5489 8.72699 20.8171 8.75672 20.9908 8.89769C21.1375 9.01672 21.1779 9.17751 21.1972 9.29037C21.2165 9.40322 21.2406 9.6603 21.2214 9.86118C21.0032 12.154 20.059 17.718 19.5787 20.2859C19.3754 21.3725 18.9752 21.7369 18.5877 21.7725C17.7457 21.85 17.1063 21.216 16.2907 20.6814C15.0145 19.8449 14.2936 19.3241 13.0548 18.5078C11.6232 17.5644 12.5512 17.0459 13.3671 16.1985C13.5806 15.9767 17.2907 12.6021 17.3625 12.296C17.3715 12.2577 17.3798 12.115 17.295 12.0397C17.2102 11.9643 17.0851 11.9901 16.9948 12.0106C16.8668 12.0396 14.8281 13.3871 10.8786 16.0531C10.2999 16.4505 9.77578 16.6441 9.30616 16.634C8.78843 16.6228 7.79254 16.3412 7.05219 16.1006C6.14413 15.8054 5.42242 15.6493 5.48526 15.148C5.51799 14.8869 5.87756 14.6199 6.56397 14.3469Z" fill="white"/>
            <defs>
            <linearGradient id="paint0_linear_1756_1563" x1="14.5" y1="0" x2="14.5" y2="28.7849" gradientUnits="userSpaceOnUse">
            <stop stop-color="#2AABEE"/>
            <stop offset="1" stop-color="#229ED9"/>
            </linearGradient>
            </defs>
            </svg>`,
        domain: `https://t.me.org/`,
        type: "text",
      };
    case "vk":
      return {
        svg: `<svg width="23" height="23" viewBox="0 0 23 23" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M0 11.04C0 5.83568 0 3.23354 1.61677 1.61677C3.23354 0 5.83568 0 11.04 0H11.96C17.1643 0 19.7664 0 21.3832 1.61677C23 3.23354 23 5.83568 23 11.04V11.96C23 17.1643 23 19.7664 21.3832 21.3832C19.7664 23 17.1643 23 11.96 23H11.04C5.83568 23 3.23354 23 1.61677 21.3832C0 19.7664 0 17.1643 0 11.96V11.04Z" fill="#0077FF"/>
            <path d="M12.237 16.5698C6.99491 16.5698 4.00495 12.9761 3.88037 6.99609H6.5062C6.59245 11.3853 8.52824 13.2444 10.0616 13.6278V6.99609H12.5342V10.7815C14.0483 10.6186 15.639 8.89359 16.1756 6.99609H18.6482C18.2361 9.33443 16.5111 11.0594 15.2844 11.7686C16.5111 12.3436 18.4758 13.8482 19.2233 16.5698H16.5015C15.9169 14.749 14.4604 13.3403 12.5342 13.1486V16.5698H12.237Z" fill="white"/>
            </svg>`,
        domain: "https://vk.com/",
        type: "text",
      };
    case "tel":
      return {
        svg: `<svg width="17" height="17" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M4.13456 7.6599C5.3935 10.1341 7.41744 12.158 9.89599 13.417L11.8194 11.4892C12.0598 11.2488 12.4051 11.1788 12.7068 11.275C13.6859 11.5985 14.7394 11.7733 15.8279 11.7733C16.3131 11.7733 16.7022 12.1624 16.7022 12.6476V15.7075C16.7022 16.1928 16.3131 16.5818 15.8279 16.5818C7.61852 16.5818 0.965332 9.92863 0.965332 1.71924C0.965332 1.23402 1.35875 0.844971 1.8396 0.844971H4.89954C5.38476 0.844971 5.77381 1.23402 5.77381 1.71924C5.77381 2.8077 5.94867 3.8612 6.27214 4.84038C6.36831 5.142 6.29837 5.48734 6.05795 5.72776L4.13456 7.6599Z" fill="#5412E0"/>
            </svg>`,
        domain: "+7910***74**",
        type: "number",
      };
    case "gm":
      return {
        svg: `<svg width="19" height="14" viewBox="0 0 19 14" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M18.5377 3.54517L14.2051 6.77495V13.8253H17.2379C17.9469 13.8253 18.5377 13.2542 18.5377 12.5256V3.54517Z" fill="#4CAF50"/>
            <path d="M0.379395 3.54517L4.69234 6.79465V13.845H1.67919C0.97021 13.845 0.379395 13.2739 0.379395 12.5452V3.54517Z" fill="#1E88E5"/>
            <path d="M14.2053 1.37866L9.4591 4.94325L4.71289 1.37866V6.77477L9.4591 10.3394L14.2053 6.77477V1.37866Z" fill="#E53935"/>
            <path d="M0.379395 1.85122V3.54489L4.69234 6.79437V1.37857L3.35316 0.374182C3.03806 0.137856 2.64418 0 2.23061 0C1.20654 0 0.379395 0.82714 0.379395 1.85122Z" fill="#C62828"/>
            <path d="M18.5377 1.85122V3.54489L14.2051 6.77468V1.37857L15.564 0.374182C15.8791 0.137856 16.2729 0 16.6865 0C17.7106 0 18.5377 0.82714 18.5377 1.85122Z" fill="#FBC02D"/>
            </svg>`,
        domain: "example@ithunt.ru",
        type: "email",
      };
    case "other":
      return {
        svg: `<svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M9.50008 0.581787C9.4957 0.581787 9.4957 0.581787 9.49131 0.581787C9.49131 0.581787 9.49131 0.581787 9.48693 0.581787C9.48254 0.581787 9.47816 0.581787 9.47816 0.581787C4.44863 0.594942 0.379395 4.67294 0.379395 9.70248C0.379395 14.732 4.44863 18.81 9.47816 18.8232C9.48254 18.8232 9.48693 18.8232 9.48693 18.8232H9.49131C9.4957 18.8232 9.4957 18.8232 9.50008 18.8232C14.5384 18.8232 18.6208 14.7408 18.6208 9.70248C18.6208 4.66417 14.5384 0.581787 9.50008 0.581787ZM9.86403 6.04105C10.8331 6.01474 11.7715 5.88757 12.6792 5.66833C12.951 6.74264 13.1221 7.98358 13.1484 9.34291H9.86403V6.04105ZM9.86403 5.30876V1.37108C10.8463 1.64294 11.846 2.95404 12.4775 4.96673C11.6356 5.16844 10.7629 5.28245 9.86403 5.30876ZM9.13613 1.36231V5.31314C8.22845 5.28683 7.34708 5.16844 6.50078 4.96235C7.14098 2.9365 8.14514 1.61663 9.13613 1.36231ZM9.13613 6.04105V9.33853H5.82988C5.85619 7.97919 6.02721 6.73825 6.29907 5.66394C7.21114 5.88319 8.16267 6.01474 9.13613 6.04105ZM5.09321 9.33853H1.12045C1.19938 7.46177 1.90097 5.74287 3.01913 4.38354C3.83035 4.8308 4.69418 5.19914 5.59748 5.471C5.2993 6.63301 5.12391 7.94411 5.09321 9.33853ZM5.09321 10.0664C5.11952 11.4565 5.29492 12.7719 5.5931 13.934C4.6898 14.2102 3.83035 14.5742 3.01475 15.0214C1.89659 13.6621 1.19938 11.9432 1.11607 10.0664H5.09321ZM5.82988 10.0664H9.13613V13.3595C8.16267 13.3858 7.21114 13.5174 6.29907 13.741C6.02721 12.6667 5.85619 11.4258 5.82988 10.0664ZM9.13613 14.0918V18.047C8.14514 17.7883 7.14098 16.4728 6.50078 14.447C7.34708 14.2365 8.22845 14.1181 9.13613 14.0918ZM9.86403 18.0339V14.0874C10.7629 14.1137 11.6356 14.2321 12.4818 14.4338C11.846 16.4509 10.8506 17.762 9.86403 18.0339ZM9.86403 13.3595V10.0664H13.1484C13.1221 11.4214 12.951 12.6623 12.6792 13.7366C11.7715 13.5174 10.8331 13.3858 9.86403 13.3595ZM13.8806 10.0664H17.8797C17.8008 11.9432 17.0992 13.6577 15.981 15.0214C15.161 14.5698 14.2928 14.2014 13.3808 13.9252C13.6789 12.7632 13.8543 11.4565 13.8806 10.0664ZM13.8806 9.33853C13.8543 7.9485 13.6789 6.6374 13.3851 5.47539C14.2972 5.19914 15.1654 4.8308 15.981 4.38354C17.0992 5.74287 17.8008 7.46177 17.8797 9.34291H13.8806V9.33853ZM15.4812 3.82226C14.7533 4.20814 13.9903 4.52824 13.1878 4.76941C12.7625 3.39692 12.1617 2.27876 11.4558 1.54209C13.008 1.91481 14.3937 2.72164 15.4812 3.82226ZM7.51809 1.55086C6.81211 2.28315 6.21576 3.40131 5.7948 4.76503C5.00113 4.52385 4.24253 4.20814 3.5234 3.82226C4.59771 2.72603 5.97459 1.92358 7.51809 1.55086ZM3.51902 15.5783C4.23815 15.1924 5.00113 14.8767 5.79042 14.6355C6.21576 16.0036 6.81211 17.1174 7.51809 17.8541C5.97459 17.4814 4.59771 16.6789 3.51902 15.5783ZM11.4558 17.8629C12.1661 17.1262 12.7625 16.008 13.1922 14.6312C13.9947 14.8723 14.7576 15.1924 15.4855 15.5783C14.3981 16.6833 13.008 17.4901 11.4558 17.8629Z" fill="black"/>
            </svg>`,
        domain: "https://other.com/",
        type: "text",
      };
    default:
      return ""; // По умолчанию возвращаем пустую строку
  }
}
//Портфолио
function getPortfolio(media) {
  switch (media) {
    case "be":
      return {
        svg: `<svg width="23" height="24" viewBox="0 0 23 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M11.5 23.5098C17.8513 23.5098 23 18.361 23 12.0098C23 5.65849 17.8513 0.509766 11.5 0.509766C5.14873 0.509766 0 5.65849 0 12.0098C0 18.361 5.14873 23.5098 11.5 23.5098Z" fill="#4900E3"/>
            <g clip-path="url(#clip0_3054_3601)">
            <path d="M10.7038 11.5613C10.7038 11.5613 12.0785 11.4673 12.0785 9.98249C12.0785 8.4976 10.9538 7.77295 9.52921 7.77295H4.84131V16.0707H9.52921C9.52921 16.0707 12.391 16.154 12.391 13.6216C12.391 13.6216 12.5158 11.5613 10.7038 11.5613ZM9.19178 9.24778H9.52921C9.52921 9.24778 10.1664 9.24778 10.1664 10.1111C10.1664 10.9744 9.79168 11.0995 9.36661 11.0995H6.90686V9.24778H9.19178ZM9.39674 14.5959H6.90686V12.3785H9.52921C9.52921 12.3785 10.479 12.367 10.479 13.518C10.479 14.4886 9.76959 14.5886 9.39674 14.5959ZM16.2077 9.88414C12.7432 9.88414 12.7463 13.0724 12.7463 13.0724C12.7463 13.0724 12.5086 16.2443 16.2077 16.2443C16.2077 16.2443 19.2903 16.4065 19.2903 14.0378H17.705C17.705 14.0378 17.7578 14.9298 16.2606 14.9298C16.2606 14.9298 14.675 15.0277 14.675 13.4862H19.3432C19.3432 13.4861 19.8539 9.88414 16.2077 9.88414ZM14.6576 12.3785C14.6576 12.3785 14.8512 11.0995 16.2429 11.0995C17.6344 11.0995 17.617 12.3785 17.617 12.3785H14.6576ZM17.9863 9.2836H14.2694V8.26179H17.9863V9.2836Z" fill="white"/>
            </g>
            <defs>
            <clipPath id="clip0_3054_3601">
            <rect width="14.5263" height="8.47369" fill="white" transform="translate(4.8418 7.77295)"/>
            </clipPath>
            </defs>
            </svg>`,
        domain: `https://behance.net/`,
        type: "text",
      };
    case "git":
      return {
        svg: `<svg width="23" height="24" viewBox="0 0 23 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path fill-rule="evenodd" clip-rule="evenodd" d="M11.4962 0.509766C8.76606 0.511226 6.12544 1.50829 4.04652 3.32267C1.96759 5.13705 0.585926 7.65043 0.148572 10.4134C-0.288782 13.1764 0.246691 16.0087 1.65925 18.4041C3.07182 20.7994 5.26935 22.6015 7.85891 23.4881C8.43021 23.5974 8.6454 23.2323 8.6454 22.9219C8.6454 22.6115 8.63398 21.7114 8.63017 20.7274C5.43089 21.44 4.75485 19.3353 4.75485 19.3353C4.23307 17.9685 3.47895 17.6093 3.47895 17.6093C2.43537 16.8791 3.55703 16.8927 3.55703 16.8927C4.71296 16.9767 5.32045 18.1091 5.32045 18.1091C6.34498 19.9112 8.01126 19.3899 8.66635 19.0853C8.76918 18.3219 9.06817 17.8026 9.39762 17.5078C6.842 17.211 4.15689 16.1996 4.15689 11.6817C4.14105 10.51 4.56513 9.37684 5.34139 8.51675C5.22332 8.21998 4.82912 7.02118 5.45374 5.39284C5.45374 5.39284 6.41925 5.07654 8.61685 6.6014C10.5018 6.0729 12.4906 6.0729 14.3755 6.6014C16.5712 5.07654 17.5348 5.39284 17.5348 5.39284C18.1614 7.01727 17.7672 8.21608 17.6491 8.51675C18.4278 9.37698 18.8528 10.5121 18.8355 11.6856C18.8355 16.2133 16.1447 17.211 13.5852 17.5019C13.9966 17.869 14.3641 18.5855 14.3641 19.6867C14.3641 21.2643 14.3508 22.5334 14.3508 22.9219C14.3508 23.2362 14.5584 23.6033 15.1411 23.4881C17.731 22.6014 19.9287 20.799 21.3412 18.4032C22.7538 16.0075 23.289 13.1747 22.8511 10.4115C22.4133 7.64825 21.0309 5.13484 18.9513 3.32078C16.8717 1.50671 14.2305 0.5103 11.5 0.509766H11.4962Z" fill="#191717"/>
            </svg>`,
        domain: "https://github.com",
        type: "text",
      };
    case "dri":
      return {
        svg: ` <svg width="25" height="25" viewBox="0 0 25 25" fill="none" xmlns="http://www.w3.org/2000/svg">
            <circle cx="12.5" cy="12.5" r="11.5" fill="#EF568F" stroke="#E82B6D" stroke-width="2"/>
            <path d="M8.5 2C11.5 6 14.5 10.5 17.5 22" stroke="#E82B6D" stroke-width="2"/>
            <path d="M1 11C9 12 16.9 9.4 20.5 5" stroke="#E82B6D" stroke-width="2"/>
            <path d="M23.5 13.2134C15.5 11.5 8.5 14.5 5 20.5" stroke="#E82B6D" stroke-width="2"/>
            </svg>`,
        domain: "https://dribbble.com/",
        type: "text",
      };
    case "gd":
      return {
        svg: `<svg width="23" height="20" viewBox="0 0 23 20" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g clip-path="url(#clip0_3057_3624)">
            <path d="M3.8335 19.9977L7.66654 13.3325H22.9999L19.1665 19.9977H3.8335Z" fill="#2684FC"/>
            <path d="M15.3335 13.3326H22.9999L15.3335 0.00219727H7.6665L15.3335 13.3326Z" fill="#FFBA00"/>
            <path d="M0 13.3328L3.83357 19.998L11.5 6.66765L7.66661 0.00244141L0 13.3328Z" fill="#00AC47"/>
            <path d="M11.5 6.59995L15.3335 0.00219727H7.6665L11.5 6.59995Z" fill="#00832D"/>
            <path d="M15.3997 13.3487L19.1475 19.9963L22.981 13.2988L15.3997 13.3487Z" fill="#EA4335"/>
            <path d="M7.58133 13.3487L2.32608e-05 13.2988L3.8335 19.9963L7.58133 13.3487Z" fill="#0066DA"/>
            </g>
            <defs>
            <clipPath id="clip0_3057_3624">
            <rect width="23" height="20" fill="white"/>
            </clipPath>
            </defs>
            </svg>`,
        domain: "https://drive.google.com/",
        type: "text",
      };
    case "other":
      return {
        svg: `<svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M9.50008 0.581787C9.4957 0.581787 9.4957 0.581787 9.49131 0.581787C9.49131 0.581787 9.49131 0.581787 9.48693 0.581787C9.48254 0.581787 9.47816 0.581787 9.47816 0.581787C4.44863 0.594942 0.379395 4.67294 0.379395 9.70248C0.379395 14.732 4.44863 18.81 9.47816 18.8232C9.48254 18.8232 9.48693 18.8232 9.48693 18.8232H9.49131C9.4957 18.8232 9.4957 18.8232 9.50008 18.8232C14.5384 18.8232 18.6208 14.7408 18.6208 9.70248C18.6208 4.66417 14.5384 0.581787 9.50008 0.581787ZM9.86403 6.04105C10.8331 6.01474 11.7715 5.88757 12.6792 5.66833C12.951 6.74264 13.1221 7.98358 13.1484 9.34291H9.86403V6.04105ZM9.86403 5.30876V1.37108C10.8463 1.64294 11.846 2.95404 12.4775 4.96673C11.6356 5.16844 10.7629 5.28245 9.86403 5.30876ZM9.13613 1.36231V5.31314C8.22845 5.28683 7.34708 5.16844 6.50078 4.96235C7.14098 2.9365 8.14514 1.61663 9.13613 1.36231ZM9.13613 6.04105V9.33853H5.82988C5.85619 7.97919 6.02721 6.73825 6.29907 5.66394C7.21114 5.88319 8.16267 6.01474 9.13613 6.04105ZM5.09321 9.33853H1.12045C1.19938 7.46177 1.90097 5.74287 3.01913 4.38354C3.83035 4.8308 4.69418 5.19914 5.59748 5.471C5.2993 6.63301 5.12391 7.94411 5.09321 9.33853ZM5.09321 10.0664C5.11952 11.4565 5.29492 12.7719 5.5931 13.934C4.6898 14.2102 3.83035 14.5742 3.01475 15.0214C1.89659 13.6621 1.19938 11.9432 1.11607 10.0664H5.09321ZM5.82988 10.0664H9.13613V13.3595C8.16267 13.3858 7.21114 13.5174 6.29907 13.741C6.02721 12.6667 5.85619 11.4258 5.82988 10.0664ZM9.13613 14.0918V18.047C8.14514 17.7883 7.14098 16.4728 6.50078 14.447C7.34708 14.2365 8.22845 14.1181 9.13613 14.0918ZM9.86403 18.0339V14.0874C10.7629 14.1137 11.6356 14.2321 12.4818 14.4338C11.846 16.4509 10.8506 17.762 9.86403 18.0339ZM9.86403 13.3595V10.0664H13.1484C13.1221 11.4214 12.951 12.6623 12.6792 13.7366C11.7715 13.5174 10.8331 13.3858 9.86403 13.3595ZM13.8806 10.0664H17.8797C17.8008 11.9432 17.0992 13.6577 15.981 15.0214C15.161 14.5698 14.2928 14.2014 13.3808 13.9252C13.6789 12.7632 13.8543 11.4565 13.8806 10.0664ZM13.8806 9.33853C13.8543 7.9485 13.6789 6.6374 13.3851 5.47539C14.2972 5.19914 15.1654 4.8308 15.981 4.38354C17.0992 5.74287 17.8008 7.46177 17.8797 9.34291H13.8806V9.33853ZM15.4812 3.82226C14.7533 4.20814 13.9903 4.52824 13.1878 4.76941C12.7625 3.39692 12.1617 2.27876 11.4558 1.54209C13.008 1.91481 14.3937 2.72164 15.4812 3.82226ZM7.51809 1.55086C6.81211 2.28315 6.21576 3.40131 5.7948 4.76503C5.00113 4.52385 4.24253 4.20814 3.5234 3.82226C4.59771 2.72603 5.97459 1.92358 7.51809 1.55086ZM3.51902 15.5783C4.23815 15.1924 5.00113 14.8767 5.79042 14.6355C6.21576 16.0036 6.81211 17.1174 7.51809 17.8541C5.97459 17.4814 4.59771 16.6789 3.51902 15.5783ZM11.4558 17.8629C12.1661 17.1262 12.7625 16.008 13.1922 14.6312C13.9947 14.8723 14.7576 15.1924 15.4855 15.5783C14.3981 16.6833 13.008 17.4901 11.4558 17.8629Z" fill="black"/>
            </svg>`,
        domain: "https://other.com/",
        type: "text",
      };
    default:
      return ""; // По умолчанию возвращаем пустую строку
  }
}

//Контакты
$(".addContact").on("click", () => {
  if (myContacts.length >= 6) {
    return false;
  }
  $(".blackBack").css("display", "block");
  $(".addPortfolioContact").css("display", "block");
});
//Портфолио
$(".addPortfolio").on("click", () => {
  if (myPort.length >= 6) {
    return false;
  }
  $(".blackBack").css("display", "block");
  $(".addPortfolioModal").css("display", "block");
});

//Закрытие модального окна
$(".canelss").on("click", () => {
  $(".addPortfolioModal").css("display", "none");
  $(".blackBack").css("display", "none");
  $(".addPortfolioContact").css("display", "none");
});

$("#addContact").on("click", () => {
  let value = $(".inputContact").val();

  let output = `
    <li class="itemContact ${mediaGlobal}">   
        <div class="group">
            ${contantsPic[mediaGlobal]}
            <a href="${
              mediaGlobal === "gm"
                ? "mailto:" + value
                : mediaGlobal === "tel"
                ? "tel:" + value
                : value
            }" target="_blank">
                ${value}
            </a>
        </div>

        <div class="removeLink">
            <svg width="17" height="15" viewBox="0 0 24 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M1 5.45455H4.18182M22.8182 5.45455H19.6364M19.6364 5.45455V19.5455C19.6364 20.5496 18.8224 21.3637 17.8182 21.3637H6.00001C4.99585 21.3637 4.18182 20.5496 4.18182 19.5455V5.45455M19.6364 5.45455H16M4.18182 5.45455C4.18182 5.45455 6.3981 5.45455 7.81819 5.45455M7.81819 5.45455C7.81819 4.89657 7.81819 4.21566 7.81819 3.59457C7.81819 2.51418 8.45445 1.5354 9.44172 1.09662V1.09662C11.0126 0.398462 12.8056 0.398462 14.3765 1.09662V1.09662C15.3638 1.5354 16 2.51445 16 3.59484V5.45455M7.81819 5.45455C11.0134 5.45455 16 5.45455 16 5.45455M9.63637 10V17.2728M14.6364 10V17.2728" stroke="black" stroke-linecap="round"/>
            </svg>
        </div>
    </li>
`;

  if (myContacts.length >= 6) {
    return false;
  }
  myContacts.push({
    type: mediaGlobal,
    url: value,
  });
  data.contacts.push({
    type: mediaGlobal,
    url: value,
  });

  console.log(myContacts);
  $(".listInfoBottomContact").append(output);
  $(".blackBack").css("display", "none");
  $("#addContact").attr("disabled", true);
  $("#addPort").attr("disabled", true);

  $(".addPortfolioContact").css("display", "none");
  $(".inputContact").val("");
});

$("#addPort").on("click", () => {
  let value = $(".inputPortfolio").val();

  let output = `
    <li class="itemContact ${globalPort}">   
        <div class="group">
            ${portfolioPic[globalPort]}
            <a href="${
              globalPort === "gm"
                ? "mailto:" + value
                : mediaGlobal === "tel"
                ? "tel:" + value
                : value
            }" target="_blank">
                ${value}
            </a>
        </div>

        <div class="removeLink">
            <svg width="17" height="15" viewBox="0 0 24 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M1 5.45455H4.18182M22.8182 5.45455H19.6364M19.6364 5.45455V19.5455C19.6364 20.5496 18.8224 21.3637 17.8182 21.3637H6.00001C4.99585 21.3637 4.18182 20.5496 4.18182 19.5455V5.45455M19.6364 5.45455H16M4.18182 5.45455C4.18182 5.45455 6.3981 5.45455 7.81819 5.45455M7.81819 5.45455C7.81819 4.89657 7.81819 4.21566 7.81819 3.59457C7.81819 2.51418 8.45445 1.5354 9.44172 1.09662V1.09662C11.0126 0.398462 12.8056 0.398462 14.3765 1.09662V1.09662C15.3638 1.5354 16 2.51445 16 3.59484V5.45455M7.81819 5.45455C11.0134 5.45455 16 5.45455 16 5.45455M9.63637 10V17.2728M14.6364 10V17.2728" stroke="black" stroke-linecap="round"/>
            </svg>
        </div>
    </li>
`;

  if (myContacts.length >= 6) {
    return false;
  }
  myPort.push({
    type: globalPort,
    url: value,
  });

  console.log(myPort);
  $(".blackBack").css("display", "none");
  $("#addContact").attr("disabled", true);
});

function previewImage(input) {
  const preview = document.getElementById("preview");
  const file = input.files[0];
  console.log(file);

  if (!file || !(file.type === "image/jpeg" || file.type === "image/png")) {
    return;
  }

  if (file) {
    const reader = new FileReader();

    reader.onload = function (e) {
      const img = new Image();
      img.src = e.target.result;

      img.onload = function () {
        const canvas = document.createElement("canvas");
        const ctx = canvas.getContext("2d");

        const size = Math.min(img.width, img.height);
        canvas.width = size;
        canvas.height = size;

        ctx.drawImage(
          img,
          (img.width - size) / 2,
          (img.height - size) / 2,
          size,
          size,
          0,
          0,
          size,
          size
        );

        preview.src = canvas.toDataURL("image/png");
        if (formData.get("avatar")) {
          formData.delete("avatar");
        }
        formData.append("avatar", file);
      };
    };

    reader.readAsDataURL(file);
  } else {
    preview.src = "";
  }
}
const sendAvatar = async () => {
  try {
    const response = await fetch("https://s3.webhunt.ru/upload/avatar", {
      method: "POST",
      headers: {
        Authorization: "ILOVEPORN",
      },
      body: formData,
    });

    if (!response.ok) {
      throw new Error("Image upload failed.");
    }
    const data = await response.json();
    return data.title; // Возвращаем URL
  } catch (error) {
    console.error("Error uploading image:", error);
  }
};
let sendForm = document.getElementById('sendForm')
sendForm.addEventListener('click', sendDataToWebHunt)
async function sendDataToWebHunt() {
  sendForm.setAttribute('disabled', '')
  if (formData.get("avatar")) {
    const url = await sendAvatar();
    data.avatar = url; 
  }

  try {
    const response = await fetch("/api/setSettings", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: "augwod89h1h9awdh9py0y82hjd",
      },
      body: JSON.stringify(data),
    });

    if (!response.ok) {
      setTimeout(() => {
        sendForm.removeAttribute('disabled')
      }, 1000);
    }
    if(response.status === 201) {
      const result = await response.json();
      console.log("Ответ от сервера:", result); 
      return window.location.href = document.querySelector(".profile").children[0].href; // Перенаправление
    }
    setTimeout(() => {
      sendForm.removeAttribute('disabled')
    }, 1000);
    return;
  } catch (error) {
    console.error("Ошибка:", error);
    // Обработайте ошибку (например, покажите сообщение пользователю)
  }
}


